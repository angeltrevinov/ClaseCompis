
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BIGGERTHAN CLOSEBRACKET CLOSEPAREN COMMA CTEFLOAT CTEINT CTESTRING DIFFERENTTHAN DIV ELSE EQUALS FLOAT ID IF INT OPENBRACKET OPENPAREN PRINT PROGRAM SEMICOLON SMALLTHAN SUBTRACT SUM TIMES TWODOTS VAR\n        program : PROGRAM ID SEMICOLON vars bloque\n                | PROGRAM ID SEMICOLON bloque\n        \n        vars : VAR vars2\n        \n        vars2 : vars3 TWODOTS tipo SEMICOLON vars2\n              | vars3 TWODOTS tipo SEMICOLON\n        \n        vars3 : ID COMMA vars3\n              | ID\n        \n        tipo : INT\n             | FLOAT\n        \n        bloque : OPENBRACKET estatuto bloque1 CLOSEBRACKET\n               | OPENBRACKET estatuto CLOSEBRACKET\n               | OPENBRACKET CLOSEBRACKET\n        \n        bloque1 : estatuto bloque1\n                | estatuto\n        \n        estatuto : asignacion\n                 | condicion\n                 | escritura\n        \n        condicion : IF OPENPAREN expresion CLOSEPAREN bloque ELSE bloque SEMICOLON\n                  | IF OPENPAREN expresion CLOSEPAREN bloque SEMICOLON\n        \n        escritura : PRINT OPENPAREN es1 CLOSEPAREN SEMICOLON\n        \n        es1 : expresion\n            | CTESTRING\n            | expresion COMMA es1\n            | CTESTRING COMMA es1\n        \n        asignacion : ID EQUALS expresion SEMICOLON\n        \n        expresion : exp BIGGERTHAN exp\n                  | exp SMALLTHAN exp\n                  | exp DIFFERENTTHAN exp\n                  | exp\n        \n        exp : termino exp1 exp\n            | termino\n        \n        exp1 : SUM\n             | SUBTRACT\n        \n        termino : factor t1 termino\n                | factor\n        \n        t1 : TIMES\n            | DIV\n        \n        factor : OPENPAREN expresion CLOSEPAREN\n               | SUM varcte\n               | SUBTRACT varcte\n               | varcte\n        \n        varcte : ID\n               | CTEINT\n               | CTEFLOAT\n        '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,6,9,14,25,34,],[0,-2,-1,-12,-11,-10,]),'ID':([2,7,8,13,15,16,17,22,23,26,27,28,40,41,43,50,51,52,53,54,55,56,57,58,59,60,66,67,76,80,82,],[3,12,18,18,-15,-16,-17,12,18,35,35,35,35,35,35,12,-25,35,35,35,35,-32,-33,35,-36,-37,35,35,-20,-19,-18,]),'SEMICOLON':([3,14,25,29,30,31,34,35,36,37,38,39,42,44,45,62,63,65,69,70,71,72,73,74,75,81,],[4,-12,-11,50,-8,-9,-10,-42,51,-29,-31,-35,-41,-43,-44,-39,-40,76,-26,-27,-28,-30,-34,-38,80,82,]),'VAR':([4,],[7,]),'OPENBRACKET':([4,5,10,50,64,68,79,],[8,8,-3,-5,8,-4,8,]),'CLOSEBRACKET':([8,13,15,16,17,23,24,33,51,76,80,82,],[14,25,-15,-16,-17,-14,34,-13,-25,-20,-19,-18,]),'IF':([8,13,15,16,17,23,51,76,80,82,],[19,19,-15,-16,-17,19,-25,-20,-19,-18,]),'PRINT':([8,13,15,16,17,23,51,76,80,82,],[20,20,-15,-16,-17,20,-25,-20,-19,-18,]),'TWODOTS':([11,12,32,],[21,-7,-6,]),'COMMA':([12,35,37,38,39,42,44,45,48,49,62,63,69,70,71,72,73,74,],[22,-42,-29,-31,-35,-41,-43,-44,66,67,-39,-40,-26,-27,-28,-30,-34,-38,]),'ELSE':([14,25,34,75,],[-12,-11,-10,79,]),'EQUALS':([18,],[26,]),'OPENPAREN':([19,20,26,27,28,40,52,53,54,55,56,57,58,59,60,66,67,],[27,28,40,40,40,40,40,40,40,40,-32,-33,40,-36,-37,40,40,]),'INT':([21,],[30,]),'FLOAT':([21,],[31,]),'SUM':([26,27,28,35,38,39,40,42,44,45,52,53,54,55,56,57,58,59,60,62,63,66,67,73,74,],[41,41,41,-42,56,-35,41,-41,-43,-44,41,41,41,41,-32,-33,41,-36,-37,-39,-40,41,41,-34,-38,]),'SUBTRACT':([26,27,28,35,38,39,40,42,44,45,52,53,54,55,56,57,58,59,60,62,63,66,67,73,74,],[43,43,43,-42,57,-35,43,-41,-43,-44,43,43,43,43,-32,-33,43,-36,-37,-39,-40,43,43,-34,-38,]),'CTEINT':([26,27,28,40,41,43,52,53,54,55,56,57,58,59,60,66,67,],[44,44,44,44,44,44,44,44,44,44,-32,-33,44,-36,-37,44,44,]),'CTEFLOAT':([26,27,28,40,41,43,52,53,54,55,56,57,58,59,60,66,67,],[45,45,45,45,45,45,45,45,45,45,-32,-33,45,-36,-37,45,45,]),'CTESTRING':([28,66,67,],[49,49,49,]),'TIMES':([35,39,42,44,45,62,63,74,],[-42,59,-41,-43,-44,-39,-40,-38,]),'DIV':([35,39,42,44,45,62,63,74,],[-42,60,-41,-43,-44,-39,-40,-38,]),'BIGGERTHAN':([35,37,38,39,42,44,45,62,63,72,73,74,],[-42,52,-31,-35,-41,-43,-44,-39,-40,-30,-34,-38,]),'SMALLTHAN':([35,37,38,39,42,44,45,62,63,72,73,74,],[-42,53,-31,-35,-41,-43,-44,-39,-40,-30,-34,-38,]),'DIFFERENTTHAN':([35,37,38,39,42,44,45,62,63,72,73,74,],[-42,54,-31,-35,-41,-43,-44,-39,-40,-30,-34,-38,]),'CLOSEPAREN':([35,37,38,39,42,44,45,46,47,48,49,61,62,63,69,70,71,72,73,74,77,78,],[-42,-29,-31,-35,-41,-43,-44,64,65,-21,-22,74,-39,-40,-26,-27,-28,-30,-34,-38,-23,-24,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'vars':([4,],[5,]),'bloque':([4,5,64,79,],[6,9,75,81,]),'vars2':([7,50,],[10,68,]),'vars3':([7,22,50,],[11,32,11,]),'estatuto':([8,13,23,],[13,23,23,]),'asignacion':([8,13,23,],[15,15,15,]),'condicion':([8,13,23,],[16,16,16,]),'escritura':([8,13,23,],[17,17,17,]),'bloque1':([13,23,],[24,33,]),'tipo':([21,],[29,]),'expresion':([26,27,28,40,66,67,],[36,46,48,61,48,48,]),'exp':([26,27,28,40,52,53,54,55,66,67,],[37,37,37,37,69,70,71,72,37,37,]),'termino':([26,27,28,40,52,53,54,55,58,66,67,],[38,38,38,38,38,38,38,38,73,38,38,]),'factor':([26,27,28,40,52,53,54,55,58,66,67,],[39,39,39,39,39,39,39,39,39,39,39,]),'varcte':([26,27,28,40,41,43,52,53,54,55,58,66,67,],[42,42,42,42,62,63,42,42,42,42,42,42,42,]),'es1':([28,66,67,],[47,77,78,]),'exp1':([38,],[55,]),'t1':([39,],[58,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON vars bloque','program',5,'p_program','MyParser.py',11),
  ('program -> PROGRAM ID SEMICOLON bloque','program',4,'p_program','MyParser.py',12),
  ('vars -> VAR vars2','vars',2,'p_vars','MyParser.py',18),
  ('vars2 -> vars3 TWODOTS tipo SEMICOLON vars2','vars2',5,'p_vars2','MyParser.py',24),
  ('vars2 -> vars3 TWODOTS tipo SEMICOLON','vars2',4,'p_vars2','MyParser.py',25),
  ('vars3 -> ID COMMA vars3','vars3',3,'p_vars3','MyParser.py',31),
  ('vars3 -> ID','vars3',1,'p_vars3','MyParser.py',32),
  ('tipo -> INT','tipo',1,'p_tipo','MyParser.py',38),
  ('tipo -> FLOAT','tipo',1,'p_tipo','MyParser.py',39),
  ('bloque -> OPENBRACKET estatuto bloque1 CLOSEBRACKET','bloque',4,'p_bloque','MyParser.py',45),
  ('bloque -> OPENBRACKET estatuto CLOSEBRACKET','bloque',3,'p_bloque','MyParser.py',46),
  ('bloque -> OPENBRACKET CLOSEBRACKET','bloque',2,'p_bloque','MyParser.py',47),
  ('bloque1 -> estatuto bloque1','bloque1',2,'p_bloque1','MyParser.py',53),
  ('bloque1 -> estatuto','bloque1',1,'p_bloque1','MyParser.py',54),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','MyParser.py',60),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','MyParser.py',61),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','MyParser.py',62),
  ('condicion -> IF OPENPAREN expresion CLOSEPAREN bloque ELSE bloque SEMICOLON','condicion',8,'p_condicion','MyParser.py',68),
  ('condicion -> IF OPENPAREN expresion CLOSEPAREN bloque SEMICOLON','condicion',6,'p_condicion','MyParser.py',69),
  ('escritura -> PRINT OPENPAREN es1 CLOSEPAREN SEMICOLON','escritura',5,'p_escritura','MyParser.py',75),
  ('es1 -> expresion','es1',1,'p_es1','MyParser.py',81),
  ('es1 -> CTESTRING','es1',1,'p_es1','MyParser.py',82),
  ('es1 -> expresion COMMA es1','es1',3,'p_es1','MyParser.py',83),
  ('es1 -> CTESTRING COMMA es1','es1',3,'p_es1','MyParser.py',84),
  ('asignacion -> ID EQUALS expresion SEMICOLON','asignacion',4,'p_asignacion','MyParser.py',90),
  ('expresion -> exp BIGGERTHAN exp','expresion',3,'p_expresion','MyParser.py',96),
  ('expresion -> exp SMALLTHAN exp','expresion',3,'p_expresion','MyParser.py',97),
  ('expresion -> exp DIFFERENTTHAN exp','expresion',3,'p_expresion','MyParser.py',98),
  ('expresion -> exp','expresion',1,'p_expresion','MyParser.py',99),
  ('exp -> termino exp1 exp','exp',3,'p_exp','MyParser.py',105),
  ('exp -> termino','exp',1,'p_exp','MyParser.py',106),
  ('exp1 -> SUM','exp1',1,'p_exp1','MyParser.py',112),
  ('exp1 -> SUBTRACT','exp1',1,'p_exp1','MyParser.py',113),
  ('termino -> factor t1 termino','termino',3,'p_termino','MyParser.py',119),
  ('termino -> factor','termino',1,'p_termino','MyParser.py',120),
  ('t1 -> TIMES','t1',1,'p_t1','MyParser.py',126),
  ('t1 -> DIV','t1',1,'p_t1','MyParser.py',127),
  ('factor -> OPENPAREN expresion CLOSEPAREN','factor',3,'p_factor','MyParser.py',133),
  ('factor -> SUM varcte','factor',2,'p_factor','MyParser.py',134),
  ('factor -> SUBTRACT varcte','factor',2,'p_factor','MyParser.py',135),
  ('factor -> varcte','factor',1,'p_factor','MyParser.py',136),
  ('varcte -> ID','varcte',1,'p_varcte','MyParser.py',142),
  ('varcte -> CTEINT','varcte',1,'p_varcte','MyParser.py',143),
  ('varcte -> CTEFLOAT','varcte',1,'p_varcte','MyParser.py',144),
]
